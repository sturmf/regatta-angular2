/* Only the user can change and read its profile data */
path /users/{user_id}/profile {
  read() { isCurrentUser(user_id) }
  write() { isCurrentUser(user_id) }
}


/* Everyone can read a sailingclub */
path /sailing_clubs {
  read() { true }
}


/* Only admins can change a sailingclub */
path /sailing_clubs/{sailingclub_id} {
  create() { true }
  update() { isSailingclubAdmin(sailingclub_id) }
  delete() { isSailingclubAdmin(sailingclub_id) }
}


/* For now everyone can read boats and signed in users can create or delete boats */
path /boats {
  read() { true }
  write() { isSignedIn() }
}


/* For now everyone can read events and signed in users can create or delete events */
path /events {
  read() { true }
  write() { isSignedIn() }
}


/* Different permission helpers */

// Test if we are authenticated at all
isSignedIn() { auth != null }

// Test if the given user id matches the currently signed-in user.
isCurrentUser(uid) { auth != null && auth.uid == uid }


// Test if the given user id matches the currently signed-in user.
isSailingclubAdmin(sailingclub_id) { auth != null && prior(root.sailing_clubs[sailingclub_id]['admins'][auth.uid]) == true }





/*

path /events/{event_id} {
  write() { isEventManager(this) }
}

isEventManager(event) { isSignedIn() && prior(root.sailing_clubs[event.organizer]/managers/[auth.uid]) != null }

//isEventAssessor(event) { isSignedIn() && prior(root.sailing_clubs[event.organizer]/assessors/[auth.uid]) != null }



path /users/{user_id}/settings {
  write() { isCurrentUser(user_id) }
}

path /users/{user_id}/permissions/managing_sailing_clubs/{sailing_club_id} {
  write() { isSailingClubManager(sailing_club_id) }
}

// Test if the user adding the permission is a sailingclub manager
isSailingClubManager(sailing_club_id) { isSignedIn() && prior(root.sailing_clubs[sailing_club_id]/managers/[auth.uid]) != null }

*/
